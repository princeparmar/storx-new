// Copyright (C) 2019 Storj Labs, Inc.
// See LICENSE for copying information.

package authorization

import (
	"net"
	"testing"
	"time"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"

	"storj.io/common/base58"
	"storj.io/common/identity"
	"storj.io/common/identity/testidentity"
	"storj.io/common/pb"
	"storj.io/common/peertls/tlsopts"
	"storj.io/common/rpc"
	"storj.io/common/storj"
	"storj.io/common/testcontext"
	"storj.io/storj/certificate/certificateclient"
)

var (
	t1 = Token{
		UserID: "user@mail.test",
		Data:   [tokenDataLength]byte{1, 2, 3},
	}
	t2 = Token{
		UserID: "user2@mail.test",
		Data:   [tokenDataLength]byte{4, 5, 6},
	}
)

func TestNewAuthorization(t *testing.T) {
	userID := "user@mail.test"
	auth, err := NewAuthorization(userID)
	require.NoError(t, err)
	require.NotNil(t, auth)

	assert.NotZero(t, auth.Token)
	assert.Equal(t, userID, auth.Token.UserID)
	assert.NotEmpty(t, auth.Token.Data)
}

func TestAuthorizations_MarshalUnmarshal(t *testing.T) {
	expectedAuths := Group{
		{Token: t1},
		{Token: t2},
	}

	authsBytes, err := expectedAuths.Marshal()
	require.NoError(t, err)
	require.NotEmpty(t, authsBytes)

	var actualAuths Group
	err = actualAuths.Unmarshal(authsBytes)
	assert.NoError(t, err)
	assert.NotNil(t, actualAuths)
	assert.Equal(t, expectedAuths, actualAuths)
}

func TestAuthorizations_Group(t *testing.T) {
	auths := make(Group, 10)
	for i := 0; i < 10; i++ {
		if i%2 == 0 {
			auths[i] = &Authorization{
				Token: t1,
				Claim: &Claim{
					Timestamp: time.Now().Unix(),
				},
			}
		} else {
			auths[i] = &Authorization{
				Token: t2,
			}
		}
	}

	claimed, open := auths.GroupByClaimed()
	for _, a := range claimed {
		assert.NotNil(t, a.Claim)
	}
	for _, a := range open {
		assert.Nil(t, a.Claim)
	}
}

func TestParseToken_Valid(t *testing.T) {
	userID := "user@mail.test"
	data := [tokenDataLength]byte{1, 2, 3}

	cases := []struct {
		testID string
		userID string
	}{
		{
			"valid token",
			userID,
		},
		{
			"multiple delimiters",
			"us" + tokenDelimiter + "er@mail.test",
		},
	}

	for _, c := range cases {
		testCase := c
		t.Run(testCase.testID, func(t *testing.T) {
			b58Data := base58.CheckEncode(data[:], tokenVersion)
			tokenString := testCase.userID + tokenDelimiter + b58Data
			token, err := ParseToken(tokenString)
			require.NoError(t, err)
			require.NotNil(t, token)

			assert.Equal(t, testCase.userID, token.UserID)
			assert.Equal(t, data[:], token.Data[:])
		})
	}
}

func TestParseToken_Invalid(t *testing.T) {
	userID := "user@mail.test"
	data := [tokenDataLength]byte{1, 2, 3}

	cases := []struct {
		testID      string
		tokenString string
	}{
		{
			"no delimiter",
			userID + base58.CheckEncode(data[:], tokenVersion),
		},
		{
			"missing userID",
			tokenDelimiter + base58.CheckEncode(data[:], tokenVersion),
		},
		{
			"not enough data",
			userID + tokenDelimiter + base58.CheckEncode(data[:len(data)-10], tokenVersion),
		},
		{
			"too much data",
			userID + tokenDelimiter + base58.CheckEncode(append(data[:], []byte{0, 0, 0}...), tokenVersion),
		},
		{
			"data checksum or format error",
			userID + tokenDelimiter + base58.CheckEncode(data[:], tokenVersion)[:len(base58.CheckEncode(data[:], tokenVersion))-4] + "0000",
		},
	}

	for _, c := range cases {
		testCase := c
		t.Run(testCase.testID, func(t *testing.T) {
			token, err := ParseToken(testCase.tokenString)
			assert.Nil(t, token)
			assert.True(t, ErrInvalidToken.Has(err))
		})
	}
}

func TestGroup_MarshalUnmarshal(t *testing.T) {
	ctx := testcontext.New(t)

	ecdsaPeer, err := identity.DecodePeerIdentity(ctx, ecdsaPeerIdentity)
	require.NoError(t, err)
	ecdsaPeer.RestChain = nil

	rsaPeer, err := identity.DecodePeerIdentity(ctx, rsaPeerIdentity)
	require.NoError(t, err)
	rsaPeer.RestChain = nil

	group := Group{
		&Authorization{
			Token: Token{
				UserID: "ecdsaPeer",
				Data:   [tokenDataLength]byte{1, 2, 3, 4, 5, 6},
			},
			Claim: &Claim{
				Addr:      "ecdsaPeer",
				Timestamp: 100000000,
				Identity:  ecdsaPeer,
				SignedChainBytes: [][]byte{
					[]byte("alpha"),
					[]byte("beta"),
				},
			},
		},
		&Authorization{
			Token: Token{
				UserID: "rsaPeer",
				Data:   [tokenDataLength]byte{6, 5, 4, 3, 2, 1},
			},
			Claim: &Claim{
				Addr:      "rsaPeer",
				Timestamp: 200000000,
				Identity:  rsaPeer,
				SignedChainBytes: [][]byte{
					[]byte("gamma"),
					[]byte("delta"),
				},
			},
		},
	}

	current, err := group.Marshal()
	require.NoError(t, err)
	require.Equal(t, expectedGroupData, current)

	var second Group
	err = second.Unmarshal(current)
	require.NoError(t, err)
	require.Equal(t, group, second)
}

func TestToken_Equal(t *testing.T) {
	assert.True(t, t1.Equal(&t1))
	assert.False(t, t1.Equal(&t2))
}

func TestNewClient(t *testing.T) {
	t.Skip("needs proper rpc listener to work")

	ctx := testcontext.New(t)
	defer ctx.Cleanup()

	ident, err := testidentity.PregeneratedIdentity(0, storj.LatestIDVersion())
	require.NoError(t, err)
	require.NotNil(t, ident)

	listener, err := net.Listen("tcp", "127.0.0.1:0")
	require.NoError(t, err)
	require.NotNil(t, listener)

	defer ctx.Check(listener.Close)
	ctx.Go(func() error {
		for {
			conn, err := listener.Accept()
			if err != nil {
				return nil //nolint: nilerr // ignore closing error
			}
			if err := conn.Close(); err != nil {
				return err
			}
		}
	})

	tlsOptions, err := tlsopts.NewOptions(ident, tlsopts.Config{}, nil)
	require.NoError(t, err)

	dialer := rpc.NewDefaultDialer(tlsOptions)

	t.Run("Basic", func(t *testing.T) {
		client, err := certificateclient.New(ctx, dialer, listener.Addr().String())
		assert.NoError(t, err)
		assert.NotNil(t, client)

		defer ctx.Check(client.Close)
	})

	t.Run("ClientFrom", func(t *testing.T) {
		conn, err := dialer.DialAddressInsecure(ctx, listener.Addr().String())
		require.NoError(t, err)
		require.NotNil(t, conn)

		defer ctx.Check(conn.Close)

		client := certificateclient.NewClientFrom(pb.NewDRPCCertificatesClient(conn))
		assert.NoError(t, err)
		assert.NotNil(t, client)

		defer ctx.Check(client.Close)
	})
}

var (
	ecdsaPeerIdentity = []byte{0x30, 0x82, 0x1, 0x61, 0x30, 0x82, 0x1, 0x7, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x10, 0x9, 0x75, 0x21, 0x49, 0x60, 0x7e, 0xeb, 0xc6, 0x87, 0x14, 0x65, 0xdf, 0xc9, 0x86, 0xb0, 0x8b, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x2, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x22, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x59, 0x30, 0x13, 0x6, 0x7, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x2, 0x1, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x3, 0x1, 0x7, 0x3, 0x42, 0x0, 0x4, 0x36, 0x45, 0x21, 0x9f, 0x9e, 0x46, 0xd9, 0x70, 0x98, 0xd6, 0xcd, 0x1e, 0xea, 0x5b, 0x20, 0x2d, 0x25, 0x75, 0x4e, 0x60, 0x24, 0x33, 0x4a, 0x6e, 0x5d, 0x28, 0x4b, 0x20, 0x66, 0x7b, 0x36, 0xea, 0xd6, 0xcd, 0x21, 0x26, 0xd5, 0xf3, 0x26, 0x9e, 0x36, 0x2, 0x1f, 0xab, 0x70, 0xfb, 0xf, 0x5c, 0x11, 0x11, 0xab, 0xae, 0x6a, 0xac, 0xf1, 0xb4, 0x37, 0x65, 0x1, 0x65, 0x49, 0xc, 0x5, 0x61, 0xa3, 0x3f, 0x30, 0x3d, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x5, 0xa0, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0x25, 0x4, 0x16, 0x30, 0x14, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x1, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x2, 0x30, 0xc, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x2, 0x30, 0x0, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x2, 0x3, 0x48, 0x0, 0x30, 0x45, 0x2, 0x21, 0x0, 0xe9, 0x23, 0x6d, 0xfb, 0x9f, 0x69, 0x11, 0xe1, 0x69, 0xdf, 0x4, 0xf0, 0x56, 0x41, 0x5c, 0x2a, 0xa4, 0x12, 0x76, 0x1, 0x67, 0xe4, 0x18, 0x6e, 0xcf, 0xe6, 0xa7, 0x84, 0x23, 0x71, 0x36, 0xac, 0x2, 0x20, 0x5e, 0xf0, 0x38, 0x72, 0xa4, 0x92, 0x7, 0x3e, 0x3b, 0xc2, 0x4e, 0x6e, 0x62, 0xff, 0x7c, 0x99, 0x49, 0x36, 0xae, 0x98, 0x2, 0xef, 0x53, 0xc5, 0xa2, 0xf4, 0x1a, 0x4f, 0x4b, 0x19, 0xe1, 0xab, 0x30, 0x82, 0x1, 0x70, 0x30, 0x82, 0x1, 0x16, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x11, 0x0, 0x8f, 0xd, 0xe8, 0xb9, 0x27, 0x2, 0x25, 0xd2, 0x89, 0x26, 0xde, 0x5, 0xe3, 0x87, 0xe, 0xff, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x2, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x22, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x59, 0x30, 0x13, 0x6, 0x7, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x2, 0x1, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x3, 0x1, 0x7, 0x3, 0x42, 0x0, 0x4, 0x6a, 0xd9, 0x11, 0xb9, 0x57, 0x89, 0x29, 0x0, 0xf3, 0x58, 0x8c, 0x14, 0xc1, 0x36, 0x66, 0x10, 0x9f, 0xde, 0xf2, 0xaa, 0x54, 0x28, 0xde, 0xe8, 0x7a, 0xa0, 0xba, 0xfe, 0xd9, 0x39, 0xb, 0x3f, 0x4c, 0xb4, 0x3, 0xc4, 0x1, 0xa6, 0xd0, 0x65, 0x25, 0x8d, 0x86, 0x86, 0x7c, 0x4d, 0x8f, 0x48, 0x22, 0xf2, 0x5b, 0xda, 0x68, 0xfb, 0x28, 0xaa, 0x57, 0x90, 0x5b, 0x75, 0x95, 0xe8, 0xae, 0x2d, 0xa3, 0x4d, 0x30, 0x4b, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x2, 0x4, 0x30, 0xf, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x5, 0x30, 0x3, 0x1, 0x1, 0xff, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0x5f, 0x88, 0xec, 0x4a, 0xdb, 0xee, 0x75, 0xad, 0x77, 0xc0, 0x51, 0x3f, 0x23, 0x6e, 0x45, 0xa8, 0x1c, 0xdb, 0x0, 0x75, 0x30, 0x9, 0x6, 0x4, 0x88, 0x37, 0x2, 0x1, 0x4, 0x1, 0x0, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x2, 0x3, 0x48, 0x0, 0x30, 0x45, 0x2, 0x20, 0x59, 0x6d, 0xa3, 0x21, 0x6b, 0xcb, 0x78, 0x54, 0xf0, 0xe8, 0xc9, 0x94, 0xd9, 0xe8, 0x87, 0x94, 0x30, 0x8e, 0x99, 0x2a, 0xf2, 0x85, 0xae, 0x6e, 0x4, 0xbb, 0xd9, 0x1e, 0x17, 0x63, 0x23, 0x3c, 0x2, 0x21, 0x0, 0xa9, 0x48, 0xfc, 0xf2, 0x55, 0x55, 0x8a, 0x64, 0x58, 0x7d, 0xd2, 0x98, 0x97, 0x87, 0xc3, 0xc0, 0x54, 0x2a, 0xf1, 0x3f, 0x6b, 0x33, 0x6f, 0xff, 0xcc, 0xae, 0x3a, 0xc, 0xf2, 0x27, 0x5, 0x95}
	rsaPeerIdentity   = []byte{0x30, 0x82, 0x2, 0xee, 0x30, 0x82, 0x1, 0xd6, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x11, 0x0, 0xfb, 0xae, 0x82, 0x98, 0xf8, 0x1, 0x67, 0x40, 0xdb, 0x5b, 0xb9, 0x78, 0x25, 0x90, 0xb6, 0x13, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x22, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x82, 0x1, 0x22, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x82, 0x1, 0xf, 0x0, 0x30, 0x82, 0x1, 0xa, 0x2, 0x82, 0x1, 0x1, 0x0, 0xc0, 0x51, 0x6f, 0x29, 0xb8, 0xda, 0x97, 0x4a, 0x93, 0x2e, 0x50, 0x66, 0x69, 0xa1, 0x9b, 0x20, 0x9e, 0xf4, 0x28, 0xeb, 0x3b, 0xe6, 0x67, 0xab, 0x82, 0x3f, 0x3c, 0xfa, 0x77, 0xfb, 0x91, 0x6c, 0xa2, 0x21, 0xdd, 0xb9, 0x42, 0xb3, 0xa7, 0x53, 0xbb, 0x6c, 0x40, 0xe2, 0x8, 0x9f, 0x54, 0x9a, 0xb9, 0x94, 0xfc, 0xe1, 0xc3, 0xa4, 0x6f, 0x47, 0xd9, 0x2c, 0x39, 0x9d, 0x8, 0xdb, 0xf0, 0x4e, 0x65, 0xb6, 0xeb, 0x1e, 0xbf, 0xb3, 0xda, 0xda, 0x6e, 0x94, 0xe3, 0xc8, 0x36, 0x41, 0xdd, 0xdc, 0xcc, 0x61, 0x67, 0x90, 0x0, 0xf, 0xba, 0x55, 0xd8, 0xc6, 0x67, 0xf9, 0xb2, 0xce, 0x25, 0xdb, 0x38, 0xdd, 0xd, 0x6e, 0x27, 0x83, 0xbd, 0x22, 0x64, 0xb4, 0x4, 0x23, 0x9a, 0x38, 0x22, 0x93, 0x5b, 0x9, 0x2, 0x1b, 0x28, 0x2f, 0x4a, 0x6d, 0x2, 0x7c, 0xa7, 0x3d, 0x37, 0x2a, 0x14, 0xda, 0x2d, 0xf6, 0xfe, 0xcc, 0xd5, 0x9a, 0x2c, 0x46, 0x2b, 0x48, 0xf7, 0x6a, 0xf5, 0xa7, 0x30, 0x75, 0xfa, 0x62, 0x2c, 0x9f, 0x4a, 0x38, 0x84, 0xc9, 0xa2, 0x75, 0xef, 0x16, 0x2b, 0xab, 0xcb, 0xc9, 0xaf, 0x91, 0x2, 0x15, 0x44, 0x1d, 0xa1, 0xc6, 0x75, 0xca, 0x87, 0x38, 0xb5, 0xae, 0x85, 0xff, 0xa1, 0x3c, 0xc3, 0x6e, 0xd8, 0x59, 0xa0, 0x56, 0x81, 0x5, 0x11, 0x9f, 0xd9, 0xd8, 0xa1, 0x21, 0xd7, 0x9b, 0x1a, 0xeb, 0xa5, 0xe9, 0x5, 0xcb, 0xfd, 0xb7, 0xa8, 0xd6, 0x96, 0xd0, 0x5a, 0x3a, 0xa8, 0xb4, 0x7, 0x25, 0xd, 0x9, 0xf6, 0xbb, 0xd3, 0x4a, 0x2a, 0xf7, 0x56, 0x83, 0xb0, 0x37, 0xeb, 0x2, 0xbb, 0x21, 0x4b, 0x97, 0xb7, 0xc9, 0xd3, 0xcd, 0x7b, 0x3, 0x53, 0x8, 0x2, 0xbc, 0x8c, 0xac, 0x92, 0xf8, 0xbb, 0xa6, 0x16, 0xde, 0x7d, 0xb8, 0x77, 0x7f, 0x67, 0xe6, 0xc1, 0x9, 0x2, 0x3, 0x1, 0x0, 0x1, 0xa3, 0x3f, 0x30, 0x3d, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x5, 0xa0, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0x25, 0x4, 0x16, 0x30, 0x14, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x1, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x2, 0x30, 0xc, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x2, 0x30, 0x0, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0, 0x3, 0x82, 0x1, 0x1, 0x0, 0x1a, 0xf4, 0x3e, 0x85, 0xc6, 0xc9, 0xc6, 0xdc, 0x67, 0xd7, 0x73, 0xbc, 0x5f, 0x6, 0x16, 0x3b, 0xc8, 0xf7, 0xb2, 0x11, 0x3c, 0x82, 0x91, 0x84, 0x7a, 0x5, 0x85, 0x6d, 0x9f, 0x1e, 0xdf, 0x5b, 0xd4, 0x46, 0xda, 0x20, 0xc0, 0x86, 0xfb, 0xdd, 0x16, 0xba, 0xd, 0x5b, 0x3e, 0x3f, 0x87, 0xb8, 0xc, 0xe4, 0x4c, 0x39, 0xd0, 0xac, 0x2, 0x97, 0xc1, 0xc8, 0xcd, 0x19, 0xea, 0x3c, 0x65, 0x1, 0x7d, 0xe, 0x8e, 0xda, 0x15, 0xbb, 0x10, 0x70, 0x24, 0x3d, 0x33, 0xe9, 0xcb, 0x7b, 0xa0, 0x91, 0xdc, 0x4b, 0x16, 0xae, 0xd2, 0xc4, 0xa6, 0x91, 0xb0, 0x10, 0xac, 0xa8, 0x6b, 0x14, 0xc5, 0x6f, 0x33, 0x6b, 0xa2, 0x39, 0x7a, 0xf0, 0xfb, 0xe0, 0x35, 0x46, 0x33, 0x81, 0x97, 0x7a, 0x23, 0x6f, 0xac, 0xd3, 0x1c, 0xd9, 0xf8, 0xd9, 0xfc, 0x78, 0xe6, 0x5, 0x49, 0x9e, 0x49, 0xc2, 0x4c, 0xad, 0x24, 0x19, 0xfb, 0xb2, 0x4b, 0x7, 0x68, 0x78, 0x16, 0x94, 0x3e, 0x2c, 0x16, 0x27, 0x99, 0xf, 0xf4, 0xf4, 0x45, 0x32, 0x91, 0x20, 0x9d, 0x94, 0x6, 0x76, 0x2, 0x54, 0x84, 0x3f, 0x47, 0x41, 0x7b, 0x85, 0x19, 0xab, 0xb1, 0xd7, 0x97, 0xd8, 0x98, 0x87, 0x5b, 0xc9, 0xbe, 0x47, 0x98, 0xa7, 0x28, 0x83, 0x2e, 0x2, 0xd9, 0x3b, 0x70, 0xb1, 0x49, 0x44, 0x5e, 0x46, 0xdc, 0x91, 0x6, 0x1a, 0x1d, 0x99, 0xdc, 0xba, 0x79, 0xc3, 0xa3, 0x3c, 0xfc, 0x98, 0xe6, 0x28, 0x14, 0x60, 0xab, 0xcb, 0xce, 0x52, 0x8d, 0x4d, 0xe0, 0x58, 0x40, 0x1, 0x22, 0x69, 0xd4, 0xad, 0x52, 0xa8, 0xa0, 0x24, 0x33, 0x4c, 0x53, 0xfa, 0xed, 0xd9, 0x9b, 0x6, 0xb5, 0xbb, 0x9a, 0x69, 0x33, 0xcb, 0x43, 0xf1, 0xfe, 0xdd, 0x46, 0x1e, 0x95, 0x74, 0xc1, 0x9b, 0xc5, 0xb1, 0x77, 0x2d, 0xf7, 0xda, 0xf0, 0xe0, 0x30, 0x82, 0x2, 0xfb, 0x30, 0x82, 0x1, 0xe3, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x10, 0x4, 0x6b, 0x7d, 0x9a, 0x85, 0xdf, 0x28, 0x7, 0x0, 0x0, 0xd5, 0xb0, 0x1a, 0xd2, 0x38, 0x7c, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x22, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x82, 0x1, 0x22, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x82, 0x1, 0xf, 0x0, 0x30, 0x82, 0x1, 0xa, 0x2, 0x82, 0x1, 0x1, 0x0, 0xd1, 0x2, 0x30, 0x71, 0x41, 0x27, 0x7e, 0x49, 0x36, 0x81, 0xe8, 0x35, 0xdf, 0x5f, 0x37, 0xf8, 0x13, 0x5e, 0xfa, 0x92, 0x56, 0x26, 0x80, 0x60, 0xd2, 0xb8, 0x88, 0xa9, 0x98, 0xc0, 0xb3, 0xee, 0xc3, 0x1b, 0x8b, 0x0, 0x91, 0x2e, 0x48, 0x61, 0x49, 0x30, 0xf0, 0x41, 0xdc, 0x68, 0xb3, 0x7d, 0x3c, 0x87, 0xd5, 0xc4, 0xc5, 0x22, 0x99, 0x8b, 0x30, 0x24, 0xd6, 0x87, 0xf6, 0xea, 0xee, 0x5f, 0xff, 0xfb, 0xb3, 0x6a, 0x2a, 0xd3, 0xc3, 0x66, 0x69, 0x3e, 0x50, 0xf0, 0x55, 0xce, 0xa2, 0xa1, 0xff, 0x5e, 0x73, 0xcd, 0x40, 0xf0, 0x8e, 0x7e, 0x90, 0x72, 0xa9, 0x3b, 0xdd, 0xf8, 0x0, 0xa7, 0x1b, 0x6b, 0x39, 0x5b, 0x60, 0xf4, 0x10, 0x75, 0x53, 0x95, 0xfd, 0x8c, 0x60, 0x20, 0x69, 0x94, 0xaa, 0xc2, 0x81, 0xfc, 0xd1, 0x7b, 0x75, 0x4a, 0x65, 0x3c, 0x54, 0x93, 0xdc, 0xf0, 0x4c, 0x80, 0xa5, 0x58, 0x3c, 0x9d, 0x26, 0x32, 0x96, 0x4, 0x3e, 0x52, 0x7f, 0x5e, 0x98, 0xf1, 0x6f, 0xef, 0x21, 0xf, 0xa5, 0x95, 0xe7, 0xc8, 0xb9, 0x83, 0xb6, 0xdb, 0x72, 0x97, 0xce, 0x97, 0xe1, 0x6a, 0xf5, 0x5f, 0xa6, 0xc, 0x12, 0xf1, 0xf0, 0x47, 0xac, 0xbf, 0xe3, 0x38, 0xfd, 0x71, 0xf3, 0xe4, 0x20, 0x83, 0x17, 0x39, 0x52, 0x37, 0x80, 0xe4, 0xdf, 0xcb, 0x32, 0x8b, 0x62, 0xcb, 0xb3, 0x1a, 0x1e, 0xa5, 0xc8, 0xdd, 0x64, 0x60, 0x28, 0x8, 0x31, 0x35, 0x53, 0x6c, 0x67, 0x15, 0x30, 0x8d, 0x59, 0xdf, 0xeb, 0x21, 0xae, 0x61, 0x5, 0x4d, 0xf9, 0x61, 0x47, 0x16, 0xfa, 0x4a, 0xff, 0x81, 0xa5, 0x1c, 0x73, 0xec, 0xe4, 0xab, 0x74, 0x96, 0x78, 0x12, 0x67, 0x9b, 0x73, 0x49, 0x4a, 0x2a, 0xc7, 0xbb, 0xb0, 0xae, 0x90, 0x6f, 0x45, 0x72, 0xc5, 0x4f, 0xb8, 0x10, 0x9d, 0x7a, 0x6, 0xa9, 0x2, 0x3, 0x1, 0x0, 0x1, 0xa3, 0x4d, 0x30, 0x4b, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x2, 0x4, 0x30, 0xf, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x5, 0x30, 0x3, 0x1, 0x1, 0xff, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0x7, 0xeb, 0xe1, 0x63, 0xc3, 0x54, 0x4f, 0x34, 0x36, 0x65, 0x66, 0x91, 0x57, 0xdf, 0xe3, 0xf, 0x31, 0xae, 0xe1, 0x97, 0x30, 0x9, 0x6, 0x4, 0x88, 0x37, 0x2, 0x1, 0x4, 0x1, 0x0, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0, 0x3, 0x82, 0x1, 0x1, 0x0, 0x2b, 0x88, 0x6c, 0xfc, 0x4b, 0x53, 0x10, 0x6, 0xb0, 0xd2, 0xb8, 0x5e, 0xe9, 0x60, 0xe8, 0xe1, 0x5d, 0x88, 0xf5, 0x94, 0xcd, 0x37, 0x6b, 0x6e, 0x46, 0xf5, 0xd2, 0x82, 0x4, 0xaa, 0xb1, 0x3c, 0x9f, 0x55, 0xe1, 0xaa, 0xcb, 0xbe, 0x9e, 0x62, 0xc0, 0x6f, 0x67, 0x2f, 0xd0, 0xf2, 0x40, 0x83, 0xdf, 0x69, 0x54, 0x9a, 0x3b, 0xb1, 0x72, 0x64, 0x57, 0x9c, 0x37, 0x27, 0x92, 0x57, 0x94, 0x20, 0x14, 0x38, 0x23, 0xa9, 0x4b, 0x71, 0x2c, 0xa0, 0xc, 0x21, 0x60, 0x99, 0xf0, 0x66, 0x8a, 0x2, 0xe2, 0xd6, 0x7b, 0xa4, 0x8c, 0xda, 0x1f, 0x8f, 0x30, 0x3c, 0x42, 0x85, 0xf0, 0x31, 0x2e, 0x90, 0x52, 0xa8, 0x62, 0x8a, 0xdc, 0xf8, 0x79, 0x38, 0x67, 0x7a, 0x99, 0x94, 0x16, 0x59, 0x52, 0x40, 0xe0, 0x65, 0x8f, 0xc2, 0xa3, 0x37, 0xf, 0x83, 0xa1, 0xbd, 0xa7, 0x81, 0x0, 0x5e, 0x44, 0xf1, 0x14, 0x9a, 0xc8, 0xd0, 0x97, 0x74, 0x9e, 0xdf, 0xaa, 0x2e, 0x2b, 0x92, 0xd0, 0x1c, 0x76, 0x4a, 0x1c, 0xde, 0xbd, 0x6b, 0x5f, 0xd0, 0x7f, 0x9a, 0x3c, 0x99, 0xa1, 0x98, 0x77, 0xb3, 0xcf, 0xd3, 0x30, 0x6e, 0xbd, 0x7c, 0xf0, 0xd0, 0x19, 0x32, 0x66, 0xef, 0x6c, 0x77, 0xc3, 0xfe, 0x94, 0xff, 0xd2, 0x0, 0xde, 0x13, 0xe8, 0x35, 0xeb, 0xa5, 0x3b, 0x84, 0xea, 0x13, 0xb5, 0x46, 0x8e, 0x25, 0x41, 0x95, 0x89, 0x2c, 0x10, 0x48, 0x3b, 0xae, 0x89, 0xcd, 0xfe, 0xbe, 0x89, 0x2d, 0x31, 0x9e, 0x3c, 0xb1, 0x10, 0xac, 0xae, 0x3f, 0x0, 0x81, 0x55, 0x49, 0xe0, 0xf7, 0x4d, 0xeb, 0x43, 0x64, 0xeb, 0x79, 0xb6, 0x7e, 0x44, 0xec, 0xfc, 0x84, 0x7d, 0x5f, 0x67, 0xcc, 0x43, 0x22, 0x8f, 0x30, 0x99, 0x8f, 0x2b, 0x35, 0xc1, 0x34, 0xd7, 0x15, 0x8a, 0xda, 0x5a, 0x3c, 0x89, 0xcc, 0x35, 0x41}
	expectedGroupData = []byte{0xa, 0xcb, 0x6, 0xa, 0x4d, 0xa, 0x9, 0x65, 0x63, 0x64, 0x73, 0x61, 0x50, 0x65, 0x65, 0x72, 0x12, 0x40, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12, 0xf9, 0x5, 0xa, 0x9, 0x65, 0x63, 0x64, 0x73, 0x61, 0x50, 0x65, 0x65, 0x72, 0x10, 0x80, 0xc2, 0xd7, 0x2f, 0x1a, 0xd9, 0x5, 0x30, 0x82, 0x1, 0x61, 0x30, 0x82, 0x1, 0x7, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x10, 0x9, 0x75, 0x21, 0x49, 0x60, 0x7e, 0xeb, 0xc6, 0x87, 0x14, 0x65, 0xdf, 0xc9, 0x86, 0xb0, 0x8b, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x2, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x22, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x59, 0x30, 0x13, 0x6, 0x7, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x2, 0x1, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x3, 0x1, 0x7, 0x3, 0x42, 0x0, 0x4, 0x36, 0x45, 0x21, 0x9f, 0x9e, 0x46, 0xd9, 0x70, 0x98, 0xd6, 0xcd, 0x1e, 0xea, 0x5b, 0x20, 0x2d, 0x25, 0x75, 0x4e, 0x60, 0x24, 0x33, 0x4a, 0x6e, 0x5d, 0x28, 0x4b, 0x20, 0x66, 0x7b, 0x36, 0xea, 0xd6, 0xcd, 0x21, 0x26, 0xd5, 0xf3, 0x26, 0x9e, 0x36, 0x2, 0x1f, 0xab, 0x70, 0xfb, 0xf, 0x5c, 0x11, 0x11, 0xab, 0xae, 0x6a, 0xac, 0xf1, 0xb4, 0x37, 0x65, 0x1, 0x65, 0x49, 0xc, 0x5, 0x61, 0xa3, 0x3f, 0x30, 0x3d, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x5, 0xa0, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0x25, 0x4, 0x16, 0x30, 0x14, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x1, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x2, 0x30, 0xc, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x2, 0x30, 0x0, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x2, 0x3, 0x48, 0x0, 0x30, 0x45, 0x2, 0x21, 0x0, 0xe9, 0x23, 0x6d, 0xfb, 0x9f, 0x69, 0x11, 0xe1, 0x69, 0xdf, 0x4, 0xf0, 0x56, 0x41, 0x5c, 0x2a, 0xa4, 0x12, 0x76, 0x1, 0x67, 0xe4, 0x18, 0x6e, 0xcf, 0xe6, 0xa7, 0x84, 0x23, 0x71, 0x36, 0xac, 0x2, 0x20, 0x5e, 0xf0, 0x38, 0x72, 0xa4, 0x92, 0x7, 0x3e, 0x3b, 0xc2, 0x4e, 0x6e, 0x62, 0xff, 0x7c, 0x99, 0x49, 0x36, 0xae, 0x98, 0x2, 0xef, 0x53, 0xc5, 0xa2, 0xf4, 0x1a, 0x4f, 0x4b, 0x19, 0xe1, 0xab, 0x30, 0x82, 0x1, 0x70, 0x30, 0x82, 0x1, 0x16, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x11, 0x0, 0x8f, 0xd, 0xe8, 0xb9, 0x27, 0x2, 0x25, 0xd2, 0x89, 0x26, 0xde, 0x5, 0xe3, 0x87, 0xe, 0xff, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x2, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x22, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x59, 0x30, 0x13, 0x6, 0x7, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x2, 0x1, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x3, 0x1, 0x7, 0x3, 0x42, 0x0, 0x4, 0x6a, 0xd9, 0x11, 0xb9, 0x57, 0x89, 0x29, 0x0, 0xf3, 0x58, 0x8c, 0x14, 0xc1, 0x36, 0x66, 0x10, 0x9f, 0xde, 0xf2, 0xaa, 0x54, 0x28, 0xde, 0xe8, 0x7a, 0xa0, 0xba, 0xfe, 0xd9, 0x39, 0xb, 0x3f, 0x4c, 0xb4, 0x3, 0xc4, 0x1, 0xa6, 0xd0, 0x65, 0x25, 0x8d, 0x86, 0x86, 0x7c, 0x4d, 0x8f, 0x48, 0x22, 0xf2, 0x5b, 0xda, 0x68, 0xfb, 0x28, 0xaa, 0x57, 0x90, 0x5b, 0x75, 0x95, 0xe8, 0xae, 0x2d, 0xa3, 0x4d, 0x30, 0x4b, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x2, 0x4, 0x30, 0xf, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x5, 0x30, 0x3, 0x1, 0x1, 0xff, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0x5f, 0x88, 0xec, 0x4a, 0xdb, 0xee, 0x75, 0xad, 0x77, 0xc0, 0x51, 0x3f, 0x23, 0x6e, 0x45, 0xa8, 0x1c, 0xdb, 0x0, 0x75, 0x30, 0x9, 0x6, 0x4, 0x88, 0x37, 0x2, 0x1, 0x4, 0x1, 0x0, 0x30, 0xa, 0x6, 0x8, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x4, 0x3, 0x2, 0x3, 0x48, 0x0, 0x30, 0x45, 0x2, 0x20, 0x59, 0x6d, 0xa3, 0x21, 0x6b, 0xcb, 0x78, 0x54, 0xf0, 0xe8, 0xc9, 0x94, 0xd9, 0xe8, 0x87, 0x94, 0x30, 0x8e, 0x99, 0x2a, 0xf2, 0x85, 0xae, 0x6e, 0x4, 0xbb, 0xd9, 0x1e, 0x17, 0x63, 0x23, 0x3c, 0x2, 0x21, 0x0, 0xa9, 0x48, 0xfc, 0xf2, 0x55, 0x55, 0x8a, 0x64, 0x58, 0x7d, 0xd2, 0x98, 0x97, 0x87, 0xc3, 0xc0, 0x54, 0x2a, 0xf1, 0x3f, 0x6b, 0x33, 0x6f, 0xff, 0xcc, 0xae, 0x3a, 0xc, 0xf2, 0x27, 0x5, 0x95, 0x22, 0x5, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x4, 0x62, 0x65, 0x74, 0x61, 0xa, 0xe0, 0xc, 0xa, 0x4b, 0xa, 0x7, 0x72, 0x73, 0x61, 0x50, 0x65, 0x65, 0x72, 0x12, 0x40, 0x6, 0x5, 0x4, 0x3, 0x2, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x12, 0x90, 0xc, 0xa, 0x7, 0x72, 0x73, 0x61, 0x50, 0x65, 0x65, 0x72, 0x10, 0x80, 0x84, 0xaf, 0x5f, 0x1a, 0xf1, 0xb, 0x30, 0x82, 0x2, 0xee, 0x30, 0x82, 0x1, 0xd6, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x11, 0x0, 0xfb, 0xae, 0x82, 0x98, 0xf8, 0x1, 0x67, 0x40, 0xdb, 0x5b, 0xb9, 0x78, 0x25, 0x90, 0xb6, 0x13, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x22, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x82, 0x1, 0x22, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x82, 0x1, 0xf, 0x0, 0x30, 0x82, 0x1, 0xa, 0x2, 0x82, 0x1, 0x1, 0x0, 0xc0, 0x51, 0x6f, 0x29, 0xb8, 0xda, 0x97, 0x4a, 0x93, 0x2e, 0x50, 0x66, 0x69, 0xa1, 0x9b, 0x20, 0x9e, 0xf4, 0x28, 0xeb, 0x3b, 0xe6, 0x67, 0xab, 0x82, 0x3f, 0x3c, 0xfa, 0x77, 0xfb, 0x91, 0x6c, 0xa2, 0x21, 0xdd, 0xb9, 0x42, 0xb3, 0xa7, 0x53, 0xbb, 0x6c, 0x40, 0xe2, 0x8, 0x9f, 0x54, 0x9a, 0xb9, 0x94, 0xfc, 0xe1, 0xc3, 0xa4, 0x6f, 0x47, 0xd9, 0x2c, 0x39, 0x9d, 0x8, 0xdb, 0xf0, 0x4e, 0x65, 0xb6, 0xeb, 0x1e, 0xbf, 0xb3, 0xda, 0xda, 0x6e, 0x94, 0xe3, 0xc8, 0x36, 0x41, 0xdd, 0xdc, 0xcc, 0x61, 0x67, 0x90, 0x0, 0xf, 0xba, 0x55, 0xd8, 0xc6, 0x67, 0xf9, 0xb2, 0xce, 0x25, 0xdb, 0x38, 0xdd, 0xd, 0x6e, 0x27, 0x83, 0xbd, 0x22, 0x64, 0xb4, 0x4, 0x23, 0x9a, 0x38, 0x22, 0x93, 0x5b, 0x9, 0x2, 0x1b, 0x28, 0x2f, 0x4a, 0x6d, 0x2, 0x7c, 0xa7, 0x3d, 0x37, 0x2a, 0x14, 0xda, 0x2d, 0xf6, 0xfe, 0xcc, 0xd5, 0x9a, 0x2c, 0x46, 0x2b, 0x48, 0xf7, 0x6a, 0xf5, 0xa7, 0x30, 0x75, 0xfa, 0x62, 0x2c, 0x9f, 0x4a, 0x38, 0x84, 0xc9, 0xa2, 0x75, 0xef, 0x16, 0x2b, 0xab, 0xcb, 0xc9, 0xaf, 0x91, 0x2, 0x15, 0x44, 0x1d, 0xa1, 0xc6, 0x75, 0xca, 0x87, 0x38, 0xb5, 0xae, 0x85, 0xff, 0xa1, 0x3c, 0xc3, 0x6e, 0xd8, 0x59, 0xa0, 0x56, 0x81, 0x5, 0x11, 0x9f, 0xd9, 0xd8, 0xa1, 0x21, 0xd7, 0x9b, 0x1a, 0xeb, 0xa5, 0xe9, 0x5, 0xcb, 0xfd, 0xb7, 0xa8, 0xd6, 0x96, 0xd0, 0x5a, 0x3a, 0xa8, 0xb4, 0x7, 0x25, 0xd, 0x9, 0xf6, 0xbb, 0xd3, 0x4a, 0x2a, 0xf7, 0x56, 0x83, 0xb0, 0x37, 0xeb, 0x2, 0xbb, 0x21, 0x4b, 0x97, 0xb7, 0xc9, 0xd3, 0xcd, 0x7b, 0x3, 0x53, 0x8, 0x2, 0xbc, 0x8c, 0xac, 0x92, 0xf8, 0xbb, 0xa6, 0x16, 0xde, 0x7d, 0xb8, 0x77, 0x7f, 0x67, 0xe6, 0xc1, 0x9, 0x2, 0x3, 0x1, 0x0, 0x1, 0xa3, 0x3f, 0x30, 0x3d, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x5, 0xa0, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0x25, 0x4, 0x16, 0x30, 0x14, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x1, 0x6, 0x8, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x7, 0x3, 0x2, 0x30, 0xc, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x2, 0x30, 0x0, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0, 0x3, 0x82, 0x1, 0x1, 0x0, 0x1a, 0xf4, 0x3e, 0x85, 0xc6, 0xc9, 0xc6, 0xdc, 0x67, 0xd7, 0x73, 0xbc, 0x5f, 0x6, 0x16, 0x3b, 0xc8, 0xf7, 0xb2, 0x11, 0x3c, 0x82, 0x91, 0x84, 0x7a, 0x5, 0x85, 0x6d, 0x9f, 0x1e, 0xdf, 0x5b, 0xd4, 0x46, 0xda, 0x20, 0xc0, 0x86, 0xfb, 0xdd, 0x16, 0xba, 0xd, 0x5b, 0x3e, 0x3f, 0x87, 0xb8, 0xc, 0xe4, 0x4c, 0x39, 0xd0, 0xac, 0x2, 0x97, 0xc1, 0xc8, 0xcd, 0x19, 0xea, 0x3c, 0x65, 0x1, 0x7d, 0xe, 0x8e, 0xda, 0x15, 0xbb, 0x10, 0x70, 0x24, 0x3d, 0x33, 0xe9, 0xcb, 0x7b, 0xa0, 0x91, 0xdc, 0x4b, 0x16, 0xae, 0xd2, 0xc4, 0xa6, 0x91, 0xb0, 0x10, 0xac, 0xa8, 0x6b, 0x14, 0xc5, 0x6f, 0x33, 0x6b, 0xa2, 0x39, 0x7a, 0xf0, 0xfb, 0xe0, 0x35, 0x46, 0x33, 0x81, 0x97, 0x7a, 0x23, 0x6f, 0xac, 0xd3, 0x1c, 0xd9, 0xf8, 0xd9, 0xfc, 0x78, 0xe6, 0x5, 0x49, 0x9e, 0x49, 0xc2, 0x4c, 0xad, 0x24, 0x19, 0xfb, 0xb2, 0x4b, 0x7, 0x68, 0x78, 0x16, 0x94, 0x3e, 0x2c, 0x16, 0x27, 0x99, 0xf, 0xf4, 0xf4, 0x45, 0x32, 0x91, 0x20, 0x9d, 0x94, 0x6, 0x76, 0x2, 0x54, 0x84, 0x3f, 0x47, 0x41, 0x7b, 0x85, 0x19, 0xab, 0xb1, 0xd7, 0x97, 0xd8, 0x98, 0x87, 0x5b, 0xc9, 0xbe, 0x47, 0x98, 0xa7, 0x28, 0x83, 0x2e, 0x2, 0xd9, 0x3b, 0x70, 0xb1, 0x49, 0x44, 0x5e, 0x46, 0xdc, 0x91, 0x6, 0x1a, 0x1d, 0x99, 0xdc, 0xba, 0x79, 0xc3, 0xa3, 0x3c, 0xfc, 0x98, 0xe6, 0x28, 0x14, 0x60, 0xab, 0xcb, 0xce, 0x52, 0x8d, 0x4d, 0xe0, 0x58, 0x40, 0x1, 0x22, 0x69, 0xd4, 0xad, 0x52, 0xa8, 0xa0, 0x24, 0x33, 0x4c, 0x53, 0xfa, 0xed, 0xd9, 0x9b, 0x6, 0xb5, 0xbb, 0x9a, 0x69, 0x33, 0xcb, 0x43, 0xf1, 0xfe, 0xdd, 0x46, 0x1e, 0x95, 0x74, 0xc1, 0x9b, 0xc5, 0xb1, 0x77, 0x2d, 0xf7, 0xda, 0xf0, 0xe0, 0x30, 0x82, 0x2, 0xfb, 0x30, 0x82, 0x1, 0xe3, 0xa0, 0x3, 0x2, 0x1, 0x2, 0x2, 0x10, 0x4, 0x6b, 0x7d, 0x9a, 0x85, 0xdf, 0x28, 0x7, 0x0, 0x0, 0xd5, 0xb0, 0x1a, 0xd2, 0x38, 0x7c, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x22, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x18, 0xf, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x10, 0x31, 0xe, 0x30, 0xc, 0x6, 0x3, 0x55, 0x4, 0xa, 0x13, 0x5, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x30, 0x82, 0x1, 0x22, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0x1, 0x5, 0x0, 0x3, 0x82, 0x1, 0xf, 0x0, 0x30, 0x82, 0x1, 0xa, 0x2, 0x82, 0x1, 0x1, 0x0, 0xd1, 0x2, 0x30, 0x71, 0x41, 0x27, 0x7e, 0x49, 0x36, 0x81, 0xe8, 0x35, 0xdf, 0x5f, 0x37, 0xf8, 0x13, 0x5e, 0xfa, 0x92, 0x56, 0x26, 0x80, 0x60, 0xd2, 0xb8, 0x88, 0xa9, 0x98, 0xc0, 0xb3, 0xee, 0xc3, 0x1b, 0x8b, 0x0, 0x91, 0x2e, 0x48, 0x61, 0x49, 0x30, 0xf0, 0x41, 0xdc, 0x68, 0xb3, 0x7d, 0x3c, 0x87, 0xd5, 0xc4, 0xc5, 0x22, 0x99, 0x8b, 0x30, 0x24, 0xd6, 0x87, 0xf6, 0xea, 0xee, 0x5f, 0xff, 0xfb, 0xb3, 0x6a, 0x2a, 0xd3, 0xc3, 0x66, 0x69, 0x3e, 0x50, 0xf0, 0x55, 0xce, 0xa2, 0xa1, 0xff, 0x5e, 0x73, 0xcd, 0x40, 0xf0, 0x8e, 0x7e, 0x90, 0x72, 0xa9, 0x3b, 0xdd, 0xf8, 0x0, 0xa7, 0x1b, 0x6b, 0x39, 0x5b, 0x60, 0xf4, 0x10, 0x75, 0x53, 0x95, 0xfd, 0x8c, 0x60, 0x20, 0x69, 0x94, 0xaa, 0xc2, 0x81, 0xfc, 0xd1, 0x7b, 0x75, 0x4a, 0x65, 0x3c, 0x54, 0x93, 0xdc, 0xf0, 0x4c, 0x80, 0xa5, 0x58, 0x3c, 0x9d, 0x26, 0x32, 0x96, 0x4, 0x3e, 0x52, 0x7f, 0x5e, 0x98, 0xf1, 0x6f, 0xef, 0x21, 0xf, 0xa5, 0x95, 0xe7, 0xc8, 0xb9, 0x83, 0xb6, 0xdb, 0x72, 0x97, 0xce, 0x97, 0xe1, 0x6a, 0xf5, 0x5f, 0xa6, 0xc, 0x12, 0xf1, 0xf0, 0x47, 0xac, 0xbf, 0xe3, 0x38, 0xfd, 0x71, 0xf3, 0xe4, 0x20, 0x83, 0x17, 0x39, 0x52, 0x37, 0x80, 0xe4, 0xdf, 0xcb, 0x32, 0x8b, 0x62, 0xcb, 0xb3, 0x1a, 0x1e, 0xa5, 0xc8, 0xdd, 0x64, 0x60, 0x28, 0x8, 0x31, 0x35, 0x53, 0x6c, 0x67, 0x15, 0x30, 0x8d, 0x59, 0xdf, 0xeb, 0x21, 0xae, 0x61, 0x5, 0x4d, 0xf9, 0x61, 0x47, 0x16, 0xfa, 0x4a, 0xff, 0x81, 0xa5, 0x1c, 0x73, 0xec, 0xe4, 0xab, 0x74, 0x96, 0x78, 0x12, 0x67, 0x9b, 0x73, 0x49, 0x4a, 0x2a, 0xc7, 0xbb, 0xb0, 0xae, 0x90, 0x6f, 0x45, 0x72, 0xc5, 0x4f, 0xb8, 0x10, 0x9d, 0x7a, 0x6, 0xa9, 0x2, 0x3, 0x1, 0x0, 0x1, 0xa3, 0x4d, 0x30, 0x4b, 0x30, 0xe, 0x6, 0x3, 0x55, 0x1d, 0xf, 0x1, 0x1, 0xff, 0x4, 0x4, 0x3, 0x2, 0x2, 0x4, 0x30, 0xf, 0x6, 0x3, 0x55, 0x1d, 0x13, 0x1, 0x1, 0xff, 0x4, 0x5, 0x30, 0x3, 0x1, 0x1, 0xff, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe, 0x4, 0x16, 0x4, 0x14, 0x7, 0xeb, 0xe1, 0x63, 0xc3, 0x54, 0x4f, 0x34, 0x36, 0x65, 0x66, 0x91, 0x57, 0xdf, 0xe3, 0xf, 0x31, 0xae, 0xe1, 0x97, 0x30, 0x9, 0x6, 0x4, 0x88, 0x37, 0x2, 0x1, 0x4, 0x1, 0x0, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0, 0x3, 0x82, 0x1, 0x1, 0x0, 0x2b, 0x88, 0x6c, 0xfc, 0x4b, 0x53, 0x10, 0x6, 0xb0, 0xd2, 0xb8, 0x5e, 0xe9, 0x60, 0xe8, 0xe1, 0x5d, 0x88, 0xf5, 0x94, 0xcd, 0x37, 0x6b, 0x6e, 0x46, 0xf5, 0xd2, 0x82, 0x4, 0xaa, 0xb1, 0x3c, 0x9f, 0x55, 0xe1, 0xaa, 0xcb, 0xbe, 0x9e, 0x62, 0xc0, 0x6f, 0x67, 0x2f, 0xd0, 0xf2, 0x40, 0x83, 0xdf, 0x69, 0x54, 0x9a, 0x3b, 0xb1, 0x72, 0x64, 0x57, 0x9c, 0x37, 0x27, 0x92, 0x57, 0x94, 0x20, 0x14, 0x38, 0x23, 0xa9, 0x4b, 0x71, 0x2c, 0xa0, 0xc, 0x21, 0x60, 0x99, 0xf0, 0x66, 0x8a, 0x2, 0xe2, 0xd6, 0x7b, 0xa4, 0x8c, 0xda, 0x1f, 0x8f, 0x30, 0x3c, 0x42, 0x85, 0xf0, 0x31, 0x2e, 0x90, 0x52, 0xa8, 0x62, 0x8a, 0xdc, 0xf8, 0x79, 0x38, 0x67, 0x7a, 0x99, 0x94, 0x16, 0x59, 0x52, 0x40, 0xe0, 0x65, 0x8f, 0xc2, 0xa3, 0x37, 0xf, 0x83, 0xa1, 0xbd, 0xa7, 0x81, 0x0, 0x5e, 0x44, 0xf1, 0x14, 0x9a, 0xc8, 0xd0, 0x97, 0x74, 0x9e, 0xdf, 0xaa, 0x2e, 0x2b, 0x92, 0xd0, 0x1c, 0x76, 0x4a, 0x1c, 0xde, 0xbd, 0x6b, 0x5f, 0xd0, 0x7f, 0x9a, 0x3c, 0x99, 0xa1, 0x98, 0x77, 0xb3, 0xcf, 0xd3, 0x30, 0x6e, 0xbd, 0x7c, 0xf0, 0xd0, 0x19, 0x32, 0x66, 0xef, 0x6c, 0x77, 0xc3, 0xfe, 0x94, 0xff, 0xd2, 0x0, 0xde, 0x13, 0xe8, 0x35, 0xeb, 0xa5, 0x3b, 0x84, 0xea, 0x13, 0xb5, 0x46, 0x8e, 0x25, 0x41, 0x95, 0x89, 0x2c, 0x10, 0x48, 0x3b, 0xae, 0x89, 0xcd, 0xfe, 0xbe, 0x89, 0x2d, 0x31, 0x9e, 0x3c, 0xb1, 0x10, 0xac, 0xae, 0x3f, 0x0, 0x81, 0x55, 0x49, 0xe0, 0xf7, 0x4d, 0xeb, 0x43, 0x64, 0xeb, 0x79, 0xb6, 0x7e, 0x44, 0xec, 0xfc, 0x84, 0x7d, 0x5f, 0x67, 0xcc, 0x43, 0x22, 0x8f, 0x30, 0x99, 0x8f, 0x2b, 0x35, 0xc1, 0x34, 0xd7, 0x15, 0x8a, 0xda, 0x5a, 0x3c, 0x89, 0xcc, 0x35, 0x41, 0x22, 0x5, 0x67, 0x61, 0x6d, 0x6d, 0x61, 0x22, 0x5, 0x64, 0x65, 0x6c, 0x74, 0x61}
)
